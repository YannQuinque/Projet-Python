# Plateau de jeu
def read_grid(path):
    with open(path, "r") as f :
        lignes= f.readlines()
        grid = []
        for ligne in lignes:
            L=[]
            for i in ligne:
                if i == '0'  or i == '1' or i == '2':
                    L.append(int(i))
            grid.append(L)
        f.close()
        print(grid)
        
def save_grid(path,grid):
    with open(path, "w") as f :
        for lignes in grid:
            for elem in lignes:
                f.write(str(elem)+ ' ')
            f.write('\n')
        print(grid)

def print_grid(grid):
    for row in grid:
        for elem in row:
            if elem==0:
                print(chr(46),end=" ")
            elif elem==1:
                print(chr(35),end=" ")
            else:
                print(chr(35),end=" ")
            print()

# Positionnement
def valid_position(grid,bloc,i,j):



# Annulation Ligne/Colonne + Calcul des scores
def row_state(grid,i):
    v = False
    if not(1) in grid[i]:
        v = True

def col_state(grid,j):
    v = 0
    for a in range (len(grid)):
        if grid[a][j] = 1:
            v = 1
    if v =1:
        v = False
    else:
        v = True
    return v
